import discord
from discord.ext import commands
import asyncio
from datetime import datetime
import os
from flask import Flask
from threading import Thread
import requests

# Flask app –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
app = Flask('')

@app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω! –ö–æ–º–∞–Ω–¥—ã: /–Ω–∞_–ø–æ—Å—Ç, /–≤—ã–≥–Ω–∞—Ç—å, /–ø–æ–º–æ—â—å"

@app.route('/health')
def health():
    return "OK"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.daemon = True
    t.start()

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
keep_alive()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
intents = discord.Intents.default()
intents.voice_states = True
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents, help_command=None)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
is_in_channel = False
start_time = None
current_voice_channel = None

@bot.event
async def on_ready():
    print(f'üéØ –ë–æ—Ç {bot.user.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    print(f'üéØ ID –±–æ—Ç–∞: {bot.user.id}')
    print('üîß –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥...')
    
    try:
        synced = await bot.tree.sync()
        print(f'‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥:')
        for cmd in synced:
            print(f'   - /{cmd.name}')
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}')
    
    await bot.change_presence(activity=discord.Game(name="–û—Ç–¥—ã—Ö–∞–µ—Ç"))
    print('üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')

@bot.tree.command(name="–Ω–∞_–ø–æ—Å—Ç", description="–ó–∞—Å—Ç—É–ø–∏—Ç—å –Ω–∞ –ø–æ—Å—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ")
async def join_channel(interaction: discord.Interaction):
    print(f'üîî –ö–æ–º–∞–Ω–¥–∞ /–Ω–∞_–ø–æ—Å—Ç –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}')
    
    global is_in_channel, start_time, current_voice_channel
    
    if interaction.user.voice is None:
        await interaction.response.send_message("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
        return
    
    if is_in_channel:
        await interaction.response.send_message("‚ùå –ë–æ—Ç —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–æ—Å—Ç—É –≤ –¥—Ä—É–≥–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
        return
    
    voice_channel = interaction.user.voice.channel
    
    try:
        print(f'üîó –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –∫–∞–Ω–∞–ª—É: {voice_channel.name}')
        voice_client = await voice_channel.connect()
        current_voice_channel = voice_client
        is_in_channel = True
        start_time = datetime.now()
        
        await bot.change_presence(activity=discord.Game(name="–ù–∞ –ø–æ—Å—Ç—É"))
        bot.loop.create_task(update_presence_time())
        
        await interaction.response.send_message(f"‚úÖ –ë–æ—Ç –∑–∞—Å—Ç—É–ø–∏–ª –Ω–∞ –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ {voice_channel.name}!")
        print('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É')
        
    except Exception as e:
        error_msg = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: {str(e)}"
        await interaction.response.send_message(error_msg, ephemeral=True)
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}')

@bot.tree.command(name="–≤—ã–≥–Ω–∞—Ç—å", description="–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ—Å—Ç –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
async def leave_channel(interaction: discord.Interaction):
    print(f'üîî –ö–æ–º–∞–Ω–¥–∞ /–≤—ã–≥–Ω–∞—Ç—å –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}')
    
    global is_in_channel, start_time, current_voice_channel
    
    if not is_in_channel:
        await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–æ—Å—Ç—É!", ephemeral=True)
        return
    
    end_time = datetime.now()
    time_spent = end_time - start_time
    
    hours, remainder = divmod(time_spent.total_seconds(), 3600)
    minutes, seconds = divmod(remainder, 60)
    time_str = f"{int(hours)}—á {int(minutes)}–º {int(seconds)}—Å"
    
    try:
        if current_voice_channel:
            await current_voice_channel.disconnect()
            print('üîå –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞')
        
        is_in_channel = False
        current_voice_channel = None
        
        await bot.change_presence(activity=discord.Game(name="–û—Ç–¥—ã—Ö–∞–µ—Ç"))
        
        embed = discord.Embed(
            title="üìä –°–≤–æ–¥–∫–∞ –æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–æ—Å—Ç—É",
            color=0x00ff00,
            timestamp=end_time
        )
        embed.add_field(name="‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è", value=time_str, inline=False)
        embed.add_field(name="üïê –ù–∞—á–∞–ª–æ —Å–º–µ–Ω—ã", value=start_time.strftime("%H:%M:%S"), inline=True)
        embed.add_field(name="üïê –ö–æ–Ω–µ—Ü —Å–º–µ–Ω—ã", value=end_time.strftime("%H:%M:%S"), inline=True)
        embed.add_field(name="üìÖ –î–∞—Ç–∞", value=start_time.strftime("%d.%m.%Y"), inline=False)
        
        await interaction.response.send_message(embed=embed)
        print('üìä –û—Ç–ø—Ä–∞–≤–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Ä–µ–º–µ–Ω–∏')
        
    except Exception as e:
        await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏: {str(e)}", ephemeral=True)
        print(f'‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è: {e}')

@bot.tree.command(name="–ø–æ–º–æ—â—å", description="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
async def help_command(interaction: discord.Interaction):
    print(f'üîî –ö–æ–º–∞–Ω–¥–∞ /–ø–æ–º–æ—â—å –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}')
    
    embed = discord.Embed(
        title="üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã",
        color=0x0099ff
    )
    
    embed.add_field(name="/–Ω–∞_–ø–æ—Å—Ç", value="–ó–∞—Å—Ç—É–ø–∏—Ç—å –Ω–∞ –ø–æ—Å—Ç –≤ –≤–∞—à–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ", inline=False)
    embed.add_field(name="/–≤—ã–≥–Ω–∞—Ç—å", value="–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ—Å—Ç –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", inline=False)
    embed.add_field(name="/–ø–æ–º–æ—â—å", value="–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ", inline=False)
    
    await interaction.response.send_message(embed=embed, ephemeral=True)
    print('üìã –û—Ç–ø—Ä–∞–≤–∏–ª —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º')

async def update_presence_time():
    global is_in_channel, start_time
    
    while is_in_channel:
        try:
            current_time = datetime.now()
            time_spent = current_time - start_time
            
            hours, remainder = divmod(time_spent.total_seconds(), 3600)
            minutes, seconds = divmod(remainder, 60)
            
            if hours > 0:
                time_str = f"–ù–∞ –ø–æ—Å—Ç—É: {int(hours)}—á {int(minutes)}–º"
            elif minutes > 0:
                time_str = f"–ù–∞ –ø–æ—Å—Ç—É: {int(minutes)}–º {int(seconds)}—Å"
            else:
                time_str = f"–ù–∞ –ø–æ—Å—Ç—É: {int(seconds)}—Å"
            
            await bot.change_presence(activity=discord.Game(name=time_str))
            await asyncio.sleep(10)
            
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
            break

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print('üîß –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...')
TOKEN = os.environ['DISCORD_TOKEN']
bot.run(TOKEN)
